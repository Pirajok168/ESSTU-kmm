import ru.esstu.student.messaging.messenger.datasources.db.cache.entities.ReplyMessageEntity;
import ru.esstu.student.messaging.messenger.datasources.db.cache.entities.UserEntity;
import kotlin.Boolean;
import kotlin.Int;

CREATE TABLE Appeal(
          idConversation INTEGER PRIMARY KEY NOT NULL,
          title TEXT NOT NULL,
          author TEXT AS UserEntity,
          lastMessageId INTEGER,
          notifyAboutIt INTEGER AS Boolean NOT NULL,
          unread INTEGER AS Int DEFAULT 0 NOT NULL,
          FOREIGN KEY (lastMessageId) REFERENCES PreviewLastMessage(messageId) ON DELETE CASCADE
);

setLastMessage:
    INSERT OR REPLACE INTO PreviewLastMessage(messageId, author, date, message)
       VALUES (?,?,?,?);

setAppeal:
    INSERT OR REPLACE INTO Appeal(idConversation, title,  lastMessageId, author, unread, notifyAboutIt)
        VALUES (?,?,?,?,?,?);


getAppeals:
    SELECT d.*, m.* FROM Appeal d
    LEFT JOIN PreviewLastMessage m ON d.lastMessageId == m.messageId
    ORDER BY m.date DESC LIMIT :pageSize OFFSET :pageOffset;


clear:
    DELETE FROM Appeal;
