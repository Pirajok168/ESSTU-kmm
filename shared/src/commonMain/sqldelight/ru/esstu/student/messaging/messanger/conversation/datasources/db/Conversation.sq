import ru.esstu.student.messaging.messenger.datasources.db.cache.entities.ReplyMessageEntity;
import ru.esstu.student.messaging.messenger.datasources.db.cache.entities.UserEntity;


CREATE TABLE MessageConversationTable(
    messageId INTEGER PRIMARY KEY NOT NULL,
    fromUser TEXT AS UserEntity,
    date INTEGER NOT NULL,
    message TEXT NOT NULL,
    status  TEXT NOT NULL,
    replyMessage TEXT AS ReplyMessageEntity,
    countAttachments INTEGER AS Int
);



CREATE TABLE ConversationTable(
      appUserId TEXT NOT NULL,
      idConversation INTEGER PRIMARY KEY NOT NULL,
      title TEXT NOT NULL,
      author TEXT AS UserEntity,
      lastMessageId INTEGER,
      notifyAboutIt INTEGER AS Boolean NOT NULL,
      unread INTEGER AS Int DEFAULT 0 NOT NULL
);

setLastMessage:
    INSERT OR REPLACE INTO MessageConversationTable(messageId, fromUser,date, message, status, replyMessage, countAttachments)
       VALUES (?,?,?,?,?,?,?);

setDialog:
    INSERT OR REPLACE INTO ConversationTable(appUserId, idConversation, title, author, lastMessageId, notifyAboutIt, unread)
        VALUES (?,?,?,?,?,?,?);


getDialogsWithLastMessage:
    SELECT d.*, m.* FROM ConversationTable d
    LEFT JOIN MessageConversationTable m ON d.lastMessageId == m.messageId
    ORDER BY m.date DESC LIMIT :pageSize OFFSET :pageOffset;

clear:
    DELETE FROM MessageConversationTable;