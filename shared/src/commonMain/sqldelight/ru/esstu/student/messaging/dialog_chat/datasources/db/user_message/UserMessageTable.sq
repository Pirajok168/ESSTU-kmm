CREATE TABLE UserMessageEntityTable (
    appUserId TEXT NOT NULL,
    dialogId TEXT PRIMARY KEY NOT NULL,
    text Text NOT NULL,
    replyMessageId INTEGER
);

CREATE TABLE UserCachedFileTable(
    appUserId TEXT NOT NULL ,
    dialogId TEXT NOT NULL ,
    source BLOB NOT NULL ,
    idCached INTEGER AS Int PRIMARY KEY,
    name TEXT NOT NULL ,
    ext TEXT NOT NULL ,
    size INTEGER NOT NULL,
    type TEXT NOT NULL ,
    FOREIGN KEY (dialogId) REFERENCES UserMessageEntityTable(dialogId) ON DELETE CASCADE
);




getCachedFiles:
    SELECT * FROM UserCachedFileTable WHERE appUserId == :appUserId AND dialogId == :dialogId;

getReplyMessage:
    SELECT t.*, o.*, q.*
               FROM DialogChatMessageTableNew t
               LEFT JOIN DialogChatAttachmentTableNew o ON t.messageId == o.messageId
               LEFT JOIN DialogChatReplyMessageTableNew q ON t.replyMessageId == q.idReplyMessage
               WHERE t.messageId == (:messageId) ;

getUserMessage:
    SELECT * FROM UserMessageEntityTable WHERE appUserId == :appUserId AND dialogId == :dialogId;

removeMessage:
    DELETE FROM UserMessageEntityTable WHERE appUserId == :appUserId AND dialogId == :dialogId;

addMessage:
    INSERT OR REPLACE INTO UserMessageEntityTable(appUserId, dialogId, text, replyMessageId)
        VALUES (?, ? ,?, ?);

addCachedFiles:
    INSERT OR REPLACE INTO UserCachedFileTable(idCached, appUserId,dialogId,name,ext,size,type, source)
        VALUES (?, ? ,?, ?,? ,? ,?, ?);
