import kotlin.Boolean;
import kotlin.Int;
CREATE TABLE ErredCachedFileTableNew (
    idCahedFile INTEGER AS Int PRIMARY KEY,

    messageId INTEGER NOT NULL,
    source BLOB NOT NULL,
    name TEXT NOT NULL,
    ext TEXT NOT NULL,
    size INTEGER NOT NULL,
    type TEXT NOT NULL,
    FOREIGN KEY (messageId) REFERENCES ErredMessageTableNew(idErredMessage) ON DELETE CASCADE
);


CREATE TABLE ErredMessageTableNew(
    idErredMessage INTEGER PRIMARY KEY NOT NULL,
    appUserId TEXT NOT NULL,
    dialogId TEXT NOT NULL,
    date INTEGER NOT NULL,
    text TEXT NOT NULL,
    replyMessageId INTEGER
);

getCachedFiles:
    SELECT * FROM ErredCachedFileTableNew WHERE messageId == (:messageId);


getReplyMessage:
    SELECT t.*, o.*, q.*
               FROM DialogChatMessageTableNew t
               LEFT JOIN DialogChatAttachmentTableNew o ON t.messageId == o.messageId
               LEFT JOIN DialogChatReplyMessageTableNew q ON t.replyMessageId == q.idReplyMessage
               WHERE t.messageId == (:messageId) ;


getErredMessages:
   SELECT * FROM ErredMessageTableNew WHERE appUserId == (:appUserId) AND dialogId == (:dialogId);

removeMessage:
   DELETE FROM ErredMessageTableNew WHERE idErredMessage == (:id);


addMessage:
    INSERT OR REPLACE INTO ErredMessageTableNew(idErredMessage,appUserId,dialogId,date,text,replyMessageId)
        VALUES(?,?,?,?,?,?);

addCachedFiles:
    INSERT OR REPLACE INTO ErredCachedFileTableNew(idCahedFile,messageId,name,ext,size,type, source)
        VALUES (?,?,?,?,?,?,?);